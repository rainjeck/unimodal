doctype html
html(lang="ru-RU")
  head
    meta(charset="utf-8")
    meta(http-equiv='X-UA-Compatible', content="IE=edge")
    meta(name="SKYPE_TOOLBAR" content="SKYPE_TOOLBAR_PARSER_COMPATIBLE")
    meta(name="format-detection" content="telephone=no")
    meta(name="viewport" content="width=device-width,initial-scale=1")
    meta(name="author" content="//vk.com/tishukn")

    link(rel="stylesheet", href="demo/prism.css")
    link(rel="stylesheet", href="dest/unimodal.css")

    link(rel="stylesheet" type='text/css' href="demo/style.css")

    meta(name="description" content="Simple Vanilla Javascript Modal")

    title Unimodal Demo

  body
    <!--[if lte IE 9]>
    p.browsehappy Вы используете #[strong устаревший] браузер. Пожалуйста #[a(href="//browsehappy.com/", target="_blank") обновите ваш браузер] чтобы воспользоваться всем функционалом сайта.
    <![endif]-->

    .container

      .block.text-center
        .row
          h1 Unimodal
          p Simple Vanilla Javascript Modal

        p
          a(href="//github.com/rainjeck/unimodal") GitHub
      // .block

      .block.wrap
        ul
          li Universal
          li Simple
          li Style what you want
          li Hash support

      .block.wrap
        h3.row Get started

        .row
          p Include css:
          p This is basic styles. You can change what you want and need.

          pre.language-markup: code.
            #{"<link rel='stylesheet' href='unimodal.css'>"}

        .row
          p Include script:
          pre.language-markup: code.
            #{"<script src='unimodal.min.js'>"}
      // .block

      .block.wrap
        h3.row Use

        .row
          p HTML:
          pre.language-markup: code.
            #{"<!--"}
            Important attributes:
              - [data-unimodal] - modal element
              - [data-unimodal-body] - modal body element
              - [data-unimodal-close] - modal close button
            #{"-->"}

            #{"<!--- Open Modal Button -->"}
            #{"<a href='#!' data-unimodal-open='simple-modal'>Open Modal</a>"}

            #{"<!--- Modal Markup -->"}
            #{"<div class='unimodal' id='simple-modal' data-unimodal></div>"}
              #{"<div class='unimodal-body' data-unimodal-body>"}
                #{"<button type='button' data-unimodal-close>Close</button>"}
                #{"<!--- Your Content Here -->"}
              #{"</div>"}
            #{"</div>"}

        .row
          p Init:
          pre.language-javascript: code.
            const modal = new Unimodal.default({
              scrollWindow: false, /* enable or disable window scroll */
              hash: false, /* hash support */
              onOpen: ( modal, button ) => {
                /* ... do your staff here ... */
              }
              onClose: ( modal ) => {
                /* ... do your staff here ... */
              }
            });
        .row
          p Public Methods:
          pre.language-javascript: code.
            /* Open Modal */
            Unimodal.open('your-modal-id', () => {
              /* ... your callback here ... */
            });

            /* Close Modal */
            Unimodal.close('your-modal-id', () => {
              /* ... your callback here ... */
            });

            /* OR */
            modal.open('your-modal-id');
            modal.close('your-modal-id');
      // .block

      .block.wrap
        .block
          .row
            h3 Demo
          .row
            p: a(href="#!" class="modalBtn" data-unimodal-open="simple-modal") Open Modal
          .row
            p: a(href="#!" class="modalBtn" data-unimodal-open="long-modal") Open Long Modal
        .block
          .row
            p Custom Button
          .row
            pre.language-markup: code.
              #{"<button type='button' id='custom-button'>Custom Modal</button>"}
          .row
            pre.language-javascript: code.
              const button = document.querySelector('#custom-button');
              button.addEventListener('click', e => {
                modal.open('custom-modal');
              });
          .row
            button#custom-button(type="button" class="modalBtn") Custom Modal Button

      // .block

      .block.wrap
        .row
          h3 Recipe: Video
        .row
          p HTML:
          pre.language-markup: code.
            #{"<!--- Button -->"}
            #{"<button type='button' data-unimodal-open='modal-video'>Open Modal</button>"}

            #{"<!--- Modal -->"}
            #{"<div class='unimodal' id='modal-video' data-unimodal></div>"}
              #{"<div class='unimodal-body' data-unimodal-body>"}
                #{"<button type='button' data-unimodal-close>Close</button>"}
                #{"<video controls>"}
                  #{"<source src='video.mp4' type='video/mp4' />"}
                  #{"Your browser does not support the video tag."}
                #{"</video>"}
              #{"</div>"}
            #{"</div>"}
        .row
          p JavaScript:
          pre.language-javascript: code.
            const modal = new Unimodal.default({
              onOpen: ( modal, button ) => {
                if ( modal.id == 'modal-video' ) {
                  const video = modal.querySelector('video');
                  video.currentTime = 0;
                  video.play();
                }
              },
              onClose: ( modal ) => {
                if ( modal.id == 'modal-video' ) {
                  const video = modal.querySelector('video');
                  video.pause();
                }
              }
            });
        .row
          .row
            p Demo:
          .row
            p: button(type="button" class="modalBtn" data-unimodal-open="modal-video") Video Modal
      // .block

      .block.wrap
        .row
          h3 Recipe: YouTube Video
        .row
          p HTML:
          pre.language-markup: code.
            #{"<!--- Button -->"}
            #{"<button type='button' data-unimodal-open='modal-youtube' data-youtube-id='4u6bWs-ZG0o'></button>"}

            #{"<!--- Modal -->"}
            #{"<div class='unimodal' id='modal-youtube' data-unimodal></div>"}
              #{"<div class='unimodal-body' data-unimodal-body>"}
                #{"<button type='button' data-unimodal-close>Close</button>"}
                #{"<div id='youtube-player'></div>"}
              #{"</div>"}
            #{"</div>"}

            #{"<!--- Load YouTube API -->"}
            #{"<script src='//www.youtube.com/iframe_api'></script>"}
        .row
          p JavaScript:
          .row
            pre.language-javascript: code.
              /* Create Player */
              let player;
              let playerReady = false;
              function onYouTubeIframeAPIReady() {
                player = new YT.Player('youtube-player', {
                  videoId: '',
                  events: {
                    onReady: () => {
                      playerReady = true;
                    }
                  }
                });
              }

              /* Modal */
              const modal = new Unimodal.default({
                onOpen: ( modal, button ) => {
                  if ( modal.id == 'modal-youtube' ) {
                    const videoId = button.getAttribute('data-youtube-id');

                    const check = setInterval(() => {
                      if ( playerReady ) {
                        clearInterval(check);
                        player.loadVideoById(videoId);
                        player.playVideo();
                      }
                    }, 100);
                  }
                },
                onClose: ( modal ) => {
                  if ( modal.id == 'modal-youtube' ) {
                    player.stopVideo();
                  }
                }
              });
          .row
            p Demo:
          .row
            p: button(type="button" class="modalBtn" data-unimodal-open="modal-youtube" data-youtube-id="4u6bWs-ZG0o") Youtube Modal
      // .block


    // Simple Modal
    .unimodal#simple-modal(data-unimodal)
      .unimodal-body.simple-modal(data-unimodal-body)
        button.modal-close(type="button" data-unimodal-close) Close
        .text-center
          p This is Simple Modal
    // .unimodal


    .unimodal#long-modal(data-unimodal)
      .unimodal-body.modal(data-unimodal-body)
        button.modal-close(type="button" data-unimodal-close) Close
        p Имеет никакого отношения к обитателям водоемов то и. Он веб-дизайнерами для вставки на том языке, который планируется использовать. Кириллице значительно различается такого текста. Так как цель применения такого текста. Нагрузку ему нести совсем необязательно никакого отношения. Lorem существует несколько вариантов lorem ipsum на название. Что впервые его применили в качестве рыбы текст. Разной частотой, имеется разница в книгопечатании еще в книгопечатании.
        p Кириллице значительно различается название, не имеет никакого отношения к обитателям водоемов. В качестве рыбы текст. Некоторые вопросы, связанные с использованием lorem ipsum обязан древнеримскому философу цицерону. Что такое текст-рыба впервые его трактата о пределах добра и зла средневековый. Запуске проекта так как цель применения такого текста сыграет на основе. Так как цель применения такого текста исключительно демонстрационная, то и.
        p Же лучше использовать в книгопечатании. Языках те или иные буквы. Языке, который планируется использовать при оценке качества восприятия макета несмотря на сайтах. Получив текст-рыбу, широко используемый и даже с языками, использующими латинский алфавит могут. Такого текста исключительно демонстрационная, то и демонстрации внешнего вида контента просмотра. Который планируется использовать в длине наиболее распространенных слов встречаются с разной частотой. Конечно, возникают некоторые вопросы, связанные с разной.
        p Алфавит, могут возникнуть небольшие проблемы: в длине. Веб-дизайнерами для вставки на кириллице значительно различается оригинального трактата, благодаря чему. Языке, который планируется использовать. Обитателям водоемов шрифтов, абзацев, отступов. Именно из его трактата о пределах. Качества восприятия макета ведь именно из его применили в книгопечатании. Появляется возможность получить более того, нечитабельность текста на сайтах. Широко используемый и слова получив.
        p Веб-дизайнерами для вставки на руку. Кириллический контент – написание символов. Набор слов. каждый веб-разработчик знает, что впервые его трактата о пределах добра. Текстом является знаменитый lorem ipsum обязан древнеримскому философу цицерону, ведь именно. Сайтах и слова, получив текст-рыбу широко. Сайтах и слова, получив текст-рыбу, широко используемый и демонстрации внешнего вида контента. Контента, просмотра шрифтов, абзацев, отступов и по сей день.
        p Же лучше использовать при запуске проекта. Отсюда напрашивается вывод, что впервые. Впервые его применили в различных языках те. Символов на кириллице значительно различается вида контента, просмотра шрифтов, абзацев отступов. То и т.д контент – написание символов на кириллице значительно различается. Сей день или иные буквы встречаются с языками использующими. Ему нести совсем необязательно генераторы, создающие собственные. Символов на основе оригинального трактата благодаря.
        p Проблемы: в xvi веке такое текст-рыба нечитабельность текста на сайтах и. Его трактата о пределах добра и по сей день контента. Именно из его применили в качестве рыбы текст на руку. Древнеримскому философу цицерону, ведь именно. Сегодня существует несколько вариантов lorem ipsum. Специальные генераторы, создающие собственные варианты текста сыграет на латыни и. Для вставки на латыни и даже.
        p Чему появляется возможность получить более длинный неповторяющийся набор. Кириллице значительно различается кроме того, есть специальные генераторы создающие. Небольшие проблемы: в xvi веке – написание символов на латыни и. Набор слов. возникнуть небольшие проблемы: в качестве рыбы текст. Ориентированных на латыни и даже с разной частотой, имеется разница в. Книгопечатании еще в длине наиболее распространенных слов кириллический контент.
        p Есть специальные генераторы, создающие собственные варианты текста. Сайтах и демонстрации внешнего вида контента, просмотра шрифтов. Вырвал отдельные фразы и смысловую нагрузку ему нести совсем необязательно. Так как цель применения такого. Проектах, ориентированных на интернет-страницы и проектах, ориентированных на латыни. Даже с разной частотой, имеется разница в различных языках. Вырвал отдельные фразы и смысловую нагрузку ему нести совсем необязательно латинский алфавит.
        p Считается, что впервые его трактата о пределах добра и смысловую нагрузку. Чему появляется возможность получить более длинный неповторяющийся. – написание символов на руку при запуске. Языке, который планируется использовать. Языках те или иные буквы встречаются. Специальные генераторы, создающие собственные варианты. Шрифтов, абзацев, отступов и даже. Демонстрационная, то и демонстрации внешнего вида контента, просмотра шрифтов, абзацев отступов. Рыбным текстом является знаменитый lorem ipsum.

        p.text-center: a(href="#!" data-unimodal-open="modal2") Open Other Modal

        p.text-center
          button(type="button" class="modalBtn" data-unimodal-close) Close
    // .unimodal

    .unimodal#modal2(data-unimodal)
      .unimodal-body.modal(data-unimodal-body)
        button.modal-close(type="button" data-unimodal-close) Close
        .text-center
          p This is Other Modal
    // .unimodal

    .unimodal#custom-modal(data-unimodal)
      .unimodal-body.simple-modal(data-unimodal-body)
        button.modal-close(data-unimodal-close) Close
        .text-center
          p This is Custom Modal
    // .unimodal

    .unimodal#modal-video(data-unimodal)
      .unimodal-body.modal-video(data-unimodal-body)
        button.modal-close(type="button" data-unimodal-close) Close
        video(controls preload="none")
          source(src="demo/demo.mp4" type="video/mp4")
          | Your browser does not support the video tag.
    // .unimodal

    .unimodal#modal-youtube(data-unimodal)
      .unimodal-body.modal-youtube(data-unimodal-body)
        button.modal-close(type="button" data-unimodal-close) Close
        .iframe-container
          #youtube-player


    script(src="demo/prism.js")
    script(src="//www.youtube.com/iframe_api")
    script(src="dest/unimodal.js")
    script(src="demo/demo.js")
